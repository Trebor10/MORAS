function QuickSort.partition 6
push argument 1
pop local 2
push argument 2
pop local 3
push local 3
push argument 0
add
pop pointer 1
push that 0
pop local 4
push local 2
push constant 1
sub
pop local 0
push local 2
pop local 1
label WHILE_EXP0
push local 1
push local 3
lt
not
if-goto WHILE_END0
push local 1
push argument 0
add
pop pointer 1
push that 0
push local 4
lt
push local 1
push argument 0
add
pop pointer 1
push that 0
push local 4
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
push local 0
push argument 0
add
pop pointer 1
push that 0
pop local 5
push local 0
push argument 0
add
push local 1
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push argument 0
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
push constant 1
add
pop local 0
push local 0
push argument 0
add
pop pointer 1
push that 0
pop local 5
push local 0
push argument 0
add
push local 3
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push argument 0
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function QuickSort.qsort 3
push argument 1
pop local 1
push argument 2
pop local 2
push local 2
push local 1
lt
push local 1
push constant 0
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
push local 1
push local 2
call QuickSort.partition 3
pop local 0
push argument 0
push local 1
push local 0
push constant 1
sub
call QuickSort.qsort 3
pop temp 0
push argument 0
push local 0
push constant 1
add
push local 2
call QuickSort.qsort 3
pop temp 0
push constant 0
return
